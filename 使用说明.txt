脚本使用 AES-256-CBC（高级加密标准，256 位密钥，CBC 模式）作为核心加密算法，用于加密和解密私钥。
加密密钥（ENCRYPTION_KEY）不是直接存储或随机生成
而是通过 PBKDF2（Password-Based Key Derivation Function 2，基于密码的密钥派生函数）
从用户输入的密码和随机盐（salt）生成。

3. 加密流程
从 privateKey.txt 读取私钥
生成密钥——输入密码
加密私钥——对每个私钥：
输出编码：十六进制（加密结果为 hex 字符串）。
加密结果格式：<encrypted_hex>:<iv_hex>
将盐存储到 .env 文件：SALT=<salt_hex>。
将每个加密私钥存储到 .env 文件：ENCRYPTED_KEY_<index>=<encrypted_hex>:<iv_hex>

4. 解密流程（index.js）
以下是 index.js 中解密私钥的详细步骤：
读取 .env：
从 .env 文件读取 SALT 和所有 ENCRYPTED_KEY_<index> 条目。
生成密钥：
提示用户输入密码（至少 8 字符）。
从 .env 读取 SALT（十六进制转换为 Buffer）。
使用 PBKDF2（密码 + 盐，100,000 次迭代，SHA-256）生成 32 字节加密密钥，与加密时一致。

5.解密私钥：
对每个 ENCRYPTED_KEY_<index>：
提取 <encrypted_hex> 和 <iv_hex>（以 : 分隔）。
使用 AES-256-CBC（密钥：PBKDF2 生成的密钥，IV：从 <iv_hex> 转换的 Buffer）解密。
输入编码：十六进制（密文）。
输出编码：UTF-8（解密后的私钥字符串）。
验证解密结果是否为 64 位十六进制字符串（可带 0x）。
返回私钥：
返回所有成功解密的私钥列表，用于初始化钱包。










